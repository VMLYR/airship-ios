/* Copyright Airship and Contributors */

#import <Foundation/Foundation.h>
#import "UARequest.h"
#import "UARuntimeConfig.h"

NS_ASSUME_NONNULL_BEGIN

/**
 * @note For internal use only. :nodoc:
 */
typedef void (^UAHTTPRequestCompletionHandler)(NSData * _Nullable data, NSHTTPURLResponse * _Nullable response, NSError * _Nullable error);

/**
 * Represents possible API client errors.
 * @note For internal use only. :nodoc:
 */
typedef NS_ENUM(NSInteger, UARequestSessionError) {
    /**
     * Indicates an invalid HTTP response
     */
    UARequestSessionErrorInvalidHTTPResponse,
    
    /**
     * Indicates a missing URL.
     */
    UARequestSessionErrorMissingURL
};

/**
 * The domain for NSErrors generated by UARequestSession.
 * @note For internal use only. :nodoc:
 */
extern NSString * const UARequestSessionErrorDomain;

/**
 * Request session used for running UARequests.
 * @note For internal use only. :nodoc:
 */
@interface UARequestSession : NSObject

/**
 * The shared NSURLSession.
 * @return The NSURLSession.
 */
+ (NSURLSession *)sharedNSURLSession;

/**
 * UARequestSession factory method.
 * @param config The UARuntimeConfig instance.
 * @return A UARequestSession instance.
 */
+ (instancetype)sessionWithConfig:(UARuntimeConfig *)config;

/**
 * UARequestSession factory method.
 * @param config The UARuntimeConfig instance.
 * @param session A NSURLSession instance.
 * @return A UARequestSession instance.
 */
+ (instancetype)sessionWithConfig:(UARuntimeConfig *)config NSURLSession:(NSURLSession *)session;

/**
 * Sets a http request header for all requests.
 *
 * @param value The header value.
 * @param header The header name.
 */
- (void)setValue:(id)value forHeader:(NSString *)header;

/**
 * Performs an HTTP request.
 * @param request The request.
 * @param completionHandler The completion handler.
 * @return A disposable to cancel the request. The completion handler will still be called with a request error if cancelled.
 */
- (UADisposable *)performHTTPRequest:(UARequest *)request
                   completionHandler:(UAHTTPRequestCompletionHandler)completionHandler;

@end

NS_ASSUME_NONNULL_END
